// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace NhsCui.Toolkit.Test
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class NhsCui_Toolkit_PatientNameAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.PatientName));
    
    internal NhsCui_Toolkit_PatientNameAccessor() : 
            base(m_privateType) {
    }
    
    internal static string Ellipsis {
        get {
            string ret = ((string)(m_privateType.GetStaticField("Ellipsis")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("Ellipsis", value);
        }
    }
    
    internal static int MaxFamilyNameChars {
        get {
            int ret = ((int)(m_privateType.GetStaticField("MaxFamilyNameChars")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("MaxFamilyNameChars", value);
        }
    }
    
    internal static int MaxGivenNameChars {
        get {
            int ret = ((int)(m_privateType.GetStaticField("MaxGivenNameChars")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("MaxGivenNameChars", value);
        }
    }
    
    internal static int MaxTitleChars {
        get {
            int ret = ((int)(m_privateType.GetStaticField("MaxTitleChars")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("MaxTitleChars", value);
        }
    }
    
    internal static string FormatTitle(string title) {
        object[] args = new object[] {
                title};
        string ret = ((string)(m_privateType.InvokeStatic("FormatTitle", new System.Type[] {
                    typeof(string)}, args)));
        return ret;
    }
    
    internal static string FormatGivenName(string firstName) {
        object[] args = new object[] {
                firstName};
        string ret = ((string)(m_privateType.InvokeStatic("FormatGivenName", new System.Type[] {
                    typeof(string)}, args, System.Globalization.CultureInfo.CurrentCulture)));
        return ret;
    }
    
    internal static string FormatFamilyName(string lastName) {
        object[] args = new object[] {
                lastName};
        string ret = ((string)(m_privateType.InvokeStatic("FormatFamilyName", new System.Type[] {
                    typeof(string)}, args, System.Globalization.CultureInfo.CurrentCulture)));
        return ret;
    }
    
    internal static string TruncateWithEllipsisIfNeeded(string value, int maxLength) {
        object[] args = new object[] {
                value,
                maxLength};
        string ret = ((string)(m_privateType.InvokeStatic("TruncateWithEllipsisIfNeeded", new System.Type[] {
                    typeof(string),
                    typeof(int)}, args)));
        return ret;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class NhsCui_Toolkit_DateAndTime_Resources_NhsDateResourcesAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("NhsCui.Toolkit", "NhsCui.Toolkit.DateAndTime.Resources.NhsDateResources");
    
    internal NhsCui_Toolkit_DateAndTime_Resources_NhsDateResourcesAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal static global::System.Resources.ResourceManager resourceMan {
        get {
            global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticField("resourceMan")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("resourceMan", value);
        }
    }
    
    internal static global::System.Globalization.CultureInfo resourceCulture {
        get {
            global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticField("resourceCulture")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("resourceCulture", value);
        }
    }
    
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticProperty("ResourceManager")));
            return ret;
        }
    }
    
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticProperty("Culture")));
            return ret;
        }
        set {
            m_privateType.SetStaticProperty("Culture", value);
        }
    }
    
    internal static string Approximate {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("Approximate")));
            return ret;
        }
    }
    
    internal static string ApproximateDateFormat {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("ApproximateDateFormat")));
            return ret;
        }
    }
    
    internal static string Today {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("Today")));
            return ret;
        }
    }
    
    internal static string Tomorrow {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("Tomorrow")));
            return ret;
        }
    }
    
    internal static string Yesterday {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("Yesterday")));
            return ret;
        }
    }

    internal static string Autumn
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Autumn")));
            return ret;
        }
    }

    internal static string Spring
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Spring")));
            return ret;
        }
    }

    internal static string Summer
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Summer")));
            return ret;
        }
    }

    internal static string Winter
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Winter")));
            return ret;
        }
    }

    internal static string DaysUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("DaysUnit")));
            return ret;
        }
    }

    internal static string MonthsUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("MonthsUnit")));
            return ret;
        }
    }

    internal static string WeeksUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("WeeksUnit")));
            return ret;
        }
    }

    internal static string YearsUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("YearsUnit")));
            return ret;
        }
    }
        
    internal static object CreatePrivate() {
        object[] args = new object[0];
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit", "NhsCui.Toolkit.DateAndTime.Resources.NhsDateResources", new System.Type[0], args);
        return priv_obj.Target;
    }
}
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class NhsCui_Toolkit_DateAndTime_Resources_NhsTimeResourcesAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("NhsCui.Toolkit", "NhsCui.Toolkit.DateAndTime.Resources.NhsTimeResources");
    
    internal NhsCui_Toolkit_DateAndTime_Resources_NhsTimeResourcesAccessor(object target) : 
            base(target, m_privateType) {
    }
    
    internal static global::System.Resources.ResourceManager resourceMan {
        get {
            global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticField("resourceMan")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("resourceMan", value);
        }
    }
    
    internal static global::System.Globalization.CultureInfo resourceCulture {
        get {
            global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticField("resourceCulture")));
            return ret;
        }
        set {
            m_privateType.SetStaticField("resourceCulture", value);
        }
    }
    
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticProperty("ResourceManager")));
            return ret;
        }
    }
    
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticProperty("Culture")));
            return ret;
        }
        set {
            m_privateType.SetStaticProperty("Culture", value);
        }
    }
    
    internal static string Approximate {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("Approximate")));
            return ret;
        }
    }
    
    internal static string ApproximateTimeFormat {
        get {
            string ret = ((string)(m_privateType.GetStaticProperty("ApproximateTimeFormat")));
            return ret;
        }
    }
    internal static string HoursUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("HoursUnit")));
            return ret;
        }
    }

    internal static string MinutesUnit
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("MinutesUnit")));
            return ret;
        }
    }

    internal static string Afternoon
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Afternoon")));
            return ret;
        }
    }

    internal static string AfternoonDescription
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("AfternoonDescription")));
            return ret;
        }
    }

    internal static string Evening
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Evening")));
            return ret;
        }
    }

    internal static string EveningDescription
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("EveningDescription")));
            return ret;
        }
    }

    internal static string Morning
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Morning")));
            return ret;
        }
    }

    internal static string MorningDescription
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("MorningDescription")));
            return ret;
        }
    }

    internal static string Night
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("Night")));
            return ret;
        }
    }

    internal static string NightDescription
    {
        get
        {
            string ret = ((string)(m_privateType.GetStaticProperty("NightDescription")));
            return ret;
        }
    }
  
    internal static object CreatePrivate() {
        object[] args = new object[0];
        Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit", "NhsCui.Toolkit.DateAndTime.Resources.NhsTimeResources", new System.Type[0], args);
        return priv_obj.Target;
    }
}

[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class NhsCui_Toolkit_PatientSearchParserAccessor : BaseAccessor {

    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.PatientSearch.Parser));

    internal NhsCui_Toolkit_PatientSearchParserAccessor(global::NhsCui.Toolkit.PatientSearch.Parser target)
        : 
            base(target, m_privateType) {
    }
    
    internal string address {
        get {
            string ret = ((string)(m_privateObject.GetField("address")));
            return ret;
        }
        set {
            m_privateObject.SetField("address", value);
        }
    }
    
    internal int age {
        get {
            int ret = ((int)(m_privateObject.GetField("age")));
            return ret;
        }
        set {
            m_privateObject.SetField("age", value);
        }
    }
    
    internal int ageUpper {
        get {
            int ret = ((int)(m_privateObject.GetField("ageUpper")));
            return ret;
        }
        set {
            m_privateObject.SetField("ageUpper", value);
        }
    }
    
    internal global::NhsCui.Toolkit.DateAndTime.NhsDate dateOfBirth {
        get {
            global::NhsCui.Toolkit.DateAndTime.NhsDate ret = ((global::NhsCui.Toolkit.DateAndTime.NhsDate)(m_privateObject.GetField("dateOfBirth")));
            return ret;
        }
        set {
            m_privateObject.SetField("dateOfBirth", value);
        }
    }
    
    internal global::NhsCui.Toolkit.DateAndTime.NhsDate dateOfBirthUpper {
        get {
            global::NhsCui.Toolkit.DateAndTime.NhsDate ret = ((global::NhsCui.Toolkit.DateAndTime.NhsDate)(m_privateObject.GetField("dateOfBirthUpper")));
            return ret;
        }
        set {
            m_privateObject.SetField("dateOfBirthUpper", value);
        }
    }
    
    internal char endGroupDelimiter {
        get {
            char ret = ((char)(m_privateObject.GetField("endGroupDelimiter")));
            return ret;
        }
        set {
            m_privateObject.SetField("endGroupDelimiter", value);
        }
    }
    
    internal string familyName {
        get {
            string ret = ((string)(m_privateObject.GetField("familyName")));
            return ret;
        }
        set {
            m_privateObject.SetField("familyName", value);
        }
    }

    internal global::NhsCui.Toolkit.PatientSearch.Gender gender
    {
        get {
            global::NhsCui.Toolkit.PatientSearch.Gender ret = ((global::NhsCui.Toolkit.PatientSearch.Gender)(m_privateObject.GetField("gender")));
            return ret;
        }
        set {
            m_privateObject.SetField("gender", value);
        }
    }
    
    internal string givenName {
        get {
            string ret = ((string)(m_privateObject.GetField("givenName")));
            return ret;
        }
        set {
            m_privateObject.SetField("givenName", value);
        }
    }
    
    internal char informationDelimiter {
        get {
            char ret = ((char)(m_privateObject.GetField("informationDelimiter")));
            return ret;
        }
        set {
            m_privateObject.SetField("informationDelimiter", value);
        }
    }

    internal global::NhsCui.Toolkit.PatientSearch.Information[] informationFormat
    {
        get {
            global::NhsCui.Toolkit.PatientSearch.Information[] ret = ((global::NhsCui.Toolkit.PatientSearch.Information[])(m_privateObject.GetField("informationFormat")));
            return ret;
        }
        set {
            m_privateObject.SetField("informationFormat", value);
        }
    }

    internal global::NhsCui.Toolkit.PatientSearch.Information[] mandatoryInformation
    {
        get {
            global::NhsCui.Toolkit.PatientSearch.Information[] ret = ((global::NhsCui.Toolkit.PatientSearch.Information[])(m_privateObject.GetField("mandatoryInformation")));
            return ret;
        }
        set {
            m_privateObject.SetField("mandatoryInformation", value);
        }
    }
    
    internal int maximumAge {
        get {
            int ret = ((int)(m_privateObject.GetField("maximumAge")));
            return ret;
        }
        set {
            m_privateObject.SetField("maximumAge", value);
        }
    }
    
    internal string nhsNumber {
        get {
            string ret = ((string)(m_privateObject.GetField("nhsNumber")));
            return ret;
        }
        set {
            m_privateObject.SetField("nhsNumber", value);
        }
    }
    
    internal string postcode {
        get {
            string ret = ((string)(m_privateObject.GetField("postcode")));
            return ret;
        }
        set {
            m_privateObject.SetField("postcode", value);
        }
    }
    
    internal char startGroupDelimiter {
        get {
            char ret = ((char)(m_privateObject.GetField("startGroupDelimiter")));
            return ret;
        }
        set {
            m_privateObject.SetField("startGroupDelimiter", value);
        }
    }
    
    internal string text {
        get {
            string ret = ((string)(m_privateObject.GetField("text")));
            return ret;
        }
        set {
            m_privateObject.SetField("text", value);
        }
    }
    
    internal string title {
        get {
            string ret = ((string)(m_privateObject.GetField("title")));
            return ret;
        }
        set {
            m_privateObject.SetField("title", value);
        }
    }

    internal global::NhsCui.Toolkit.PatientSearch.Title[] titles
    {
        get {
            global::NhsCui.Toolkit.PatientSearch.Title[] ret = ((global::NhsCui.Toolkit.PatientSearch.Title[])(m_privateObject.GetField("titles")));
            return ret;
        }
        set {
            m_privateObject.SetField("titles", value);
        }
    }
    
    internal string unmatchedText {
        get {
            string ret = ((string)(m_privateObject.GetField("unmatchedText")));
            return ret;
        }
        set {
            m_privateObject.SetField("unmatchedText", value);
        }
    }
    
    internal bool AllMandatoryInformationEntered() {
        object[] args = new object[0];
        bool ret = ((bool)(m_privateObject.Invoke("AllMandatoryInformationEntered", new System.Type[0], args)));
        return ret;
    }

    internal bool PropertyHasBeenSet(global::NhsCui.Toolkit.PatientSearch.Information patientSearchInfo)
    {
        object[] args = new object[] {
                patientSearchInfo};
        bool ret = ((bool)(m_privateObject.Invoke("PropertyHasBeenSet", new System.Type[] {
                    typeof(global::NhsCui.Toolkit.PatientSearch.Information)}, args)));
        return ret;
    }
}
}
