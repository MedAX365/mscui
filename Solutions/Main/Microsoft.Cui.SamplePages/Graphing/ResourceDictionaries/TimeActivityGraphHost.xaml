<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:local="clr-namespace:Microsoft.Cui.Controls;assembly=Microsoft.Cui.Controls"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TimeActivityGraphHostGraphs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="LevelOfDetailIcon_Stroke_Brush" Color="Orange"/>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>
            <Border Background="#FFDC000C" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock Margin="8,4,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="White" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle x:Name="Background" Fill="#FFFFFFFF" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1" Height="14" Margin="1" Width="14"/>
                            <Rectangle x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="14" Margin="1" Width="14" Opacity="0"/>
                            <Rectangle x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10"/>
                            <Rectangle x:Name="BoxMiddle" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603"/>
                                        <GradientStop Color="#D8FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="BoxMiddleLine" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10" Opacity=".2"/>
                            <Path x:Name="CheckIcon" Fill="#FF333333" Stretch="Fill" Height="10" Margin="1,1,0,1.5" Width="10.5" Opacity="0" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"/>
                            <Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Width="6" Opacity="0"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="1" RadiusY="1" Height="14" Width="14" Opacity="0"/>
                            <Border x:Name="ValidationErrorElement" Margin="1" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10" Background="Transparent">
                                    <Path Fill="#FFDC000C" Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z"/>
                                    <Path Fill="#ffffff" Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="ContentFocusVisualElement" Grid.Column="1" Stroke="Black" StrokeThickness="1" RadiusX="2" RadiusY="2" IsHitTestVisible="false" Opacity="0" StrokeDashArray="1 2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScenarioRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Ellipse x:Name="Background" Fill="#FFFFFFFF" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Height="14" Margin="1" Width="14"/>
                            <Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Stroke="#00000000" StrokeThickness="1" Height="14" Margin="1" Width="14" Opacity="0"/>
                            <Ellipse x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1" Height="10" Width="10"/>
                            <Ellipse x:Name="BoxMiddle" StrokeThickness="1" Height="10" Width="10">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                                <Ellipse.Fill>
                                    <LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#EAFFFFFF" Offset="0.603"/>
                                        <GradientStop Color="#D8FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="BoxMiddleLine" Stroke="#FF333333" StrokeThickness="1" Height="10" Width="10" Opacity=".2"/>
                            <Ellipse x:Name="CheckIcon" Fill="#FF333333" Height="4" Width="4" Opacity="0"/>
                            <Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Width="14" Opacity="0"/>                            
                            <Grid x:Name="ValidationErrorElement" Visibility="Collapsed" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Ellipse Stroke="#FFDB000C" StrokeThickness="1" Height="14" Width="14"/>
                                <Ellipse Fill="#FFDB000C" Height="4" HorizontalAlignment="Right" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
                                <Ellipse Fill="Transparent" Height="10" HorizontalAlignment="Right" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
                            </Grid>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="ContentFocusVisualElement" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" IsHitTestVisible="false" Opacity="0" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LevelOfDetailTickStyle" TargetType="local:LevelOfDetailTick">
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LevelOfDetailTick">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="00:00:00" Storyboard.TargetName="ELEMENT_Tick" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="Orange"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected">
                                    <Storyboard>
                                        <ColorAnimation Duration="00:00:00" Storyboard.TargetName="ELEMENT_Tick" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#00FFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ELEMENT_Tick" 
										Stroke="#FF3A3A3A" 
										Fill="Orange" 										
										StrokeThickness="1"										
										Height="18" 
										Margin="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LevelOfDetailButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#D8FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#8CFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#3FFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <Grid Margin="1" Background="{TemplateBinding Background}">
                                <Border x:Name="BackgroundAnimation" Opacity="0" Background="#FF448DCA"/>
                                <Rectangle x:Name="BackgroundGradient">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" IsHitTestVisible="false" Opacity="0"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="Black" StrokeDashArray="3 4" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="2" IsHitTestVisible="false" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LevelOfDetailStyle" TargetType="local:LevelOfDetail">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LevelOfDetail">
                    <Grid x:Name="ELEMENT_LayoutRoot" Margin="0.5" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,0,4,0" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Label}"/>
                        <Button x:Name="ELEMENT_DecrementButton" Height="18" Width="18" 
                                Grid.Column="1" Grid.Row="1" Padding="0" VerticalAlignment="Center"
                                Style="{StaticResource LevelOfDetailButtonStyle}"
                                ToolTipService.ToolTip="Click to decrease the level of detail"
                                >
                            <Grid>
                                <Path Stretch="Fill" Stroke="{StaticResource LevelOfDetailIcon_Stroke_Brush}" StrokeThickness="2" Height="10" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="2" UseLayoutRounding="False" Data="M8,4 L8,13.5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Button>
                        <StackPanel x:Name="ELEMENT_TickContainer" Grid.Column="2" Grid.Row="1" Orientation="Horizontal">
                            <StackPanel.Resources>
                                <DataTemplate x:Key="TickTemplate">
                                    <local:LevelOfDetailTick Style="{StaticResource LevelOfDetailTickStyle}"/>
                                </DataTemplate>
                            </StackPanel.Resources>
                        </StackPanel>
                        <Button x:Name="ELEMENT_IncrementButton" Height="18" Width="18" 
                                Grid.Column="3" Grid.Row="1" Padding="0" VerticalAlignment="Center"
                                Style="{StaticResource LevelOfDetailButtonStyle}"
                                ToolTipService.ToolTip="Click to increase the level of detail"
                                >
                            <Grid>
                                <Path Stretch="Fill" Stroke="{StaticResource LevelOfDetailIcon_Stroke_Brush}" StrokeThickness="2" Height="10" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="2" UseLayoutRounding="False" Data="M8,4 L8,13.5"/>
                                <Path Stretch="Fill" Stroke="{StaticResource LevelOfDetailIcon_Stroke_Brush}" StrokeThickness="2" Height="10" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="2" UseLayoutRounding="False" Data="M8,4 L8,13.5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolbarButton_Style" TargetType="Button">
        <Setter Property="Padding" Value="8,4,8,4" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.2" Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.2" Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Grid>
                                <Rectangle x:Name="MouseOverBorder" Fill="{StaticResource ToolbarButton_MouseOverBackground_Brush}" Stroke="{StaticResource ToolbarButton_BorderBrush_Brush}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="PressedBorder" Fill="{StaticResource ToolbarButton_PressedBackground_Brush}" Stroke="{StaticResource ToolbarButton_BorderBrush_Brush}" StrokeThickness="1" Opacity="0"/>
                                <Rectangle x:Name="FocusBorder" Stroke="White" StrokeDashArray="2 2" Margin="1" Opacity="0"/>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Margin="{TemplateBinding Padding}" x:Name="ContentPresenter">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SectionSeparatorStyle" TargetType="controls:GridSplitter">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="#FF868686"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root" Opacity=".5">
                                    <Rectangle Fill="{TemplateBinding Background}"/>
                                    <Grid x:Name="HorizontalTemplate" Height="6"/>
                                    <Grid x:Name="VerticalTemplate" Width="6" Visibility="Collapsed"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0"/>
                        <Grid x:Name="HorizontalTemplate" Height="10">
                            <StackPanel Height="6" VerticalAlignment="Center">
                                <Rectangle Fill="#FF868686" StrokeThickness="0" Height="1" Margin="1" Width="10"/>
                                <Rectangle Fill="#FF868686" StrokeThickness="0" Height="1" Margin="1" Width="10"/>
                            </StackPanel>
                        </Grid>
                        <Grid x:Name="VerticalTemplate" Width="10" Visibility="Collapsed">
                            <StackPanel VerticalAlignment="Center" Width="6" Orientation="Horizontal">
                                <Rectangle Fill="#FF868686" StrokeThickness="0" Height="10" Margin="1" Width="1"/>
                                <Rectangle Fill="#FF868686" StrokeThickness="0" Height="10" Margin="1" Width="1"/>
                            </StackPanel>
                        </Grid>
                        <Rectangle x:Name="FocusVisual" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" IsHitTestVisible="false" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay2" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay3" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                                                <Rectangle x:Name="BackgroundOverlay" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundOverlay2" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundGradient" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle Opacity="0" x:Name="BackgroundOverlay3" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle Opacity="0" x:Name="BackgroundGradient2" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="Highlight" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" />
                                                <ContentPresenter
                                                      x:Name="contentPresenter"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"/>
                                                <Rectangle x:Name="FocusVisualElement" RadiusX="3.5" Margin="1"  RadiusY="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Path x:Name="BtnArrow" Height="4" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Margin="0,0,6,0" HorizontalAlignment="Right">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter" 
                                                Margin="{TemplateBinding Padding}"  
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock Text=" " />
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="White" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1"  Stroke="Black" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" StrokeDashArray="3 4" />
                        <Border x:Name="ValidationErrorElement" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" 
                                           PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                           DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="12" Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TimeActivityGraphHost" x:Key="TimeActivityGraphHost">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TimeActivityGraphHost">
                    <Grid>
                        <Border Margin="2,2,2,2"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid x:Name="ELEMENT_LayoutRoot" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <Grid.Resources>
                                    <local:TimeFrequencyBindingHelper x:Key="timeFrequency" />
                                    <local:TimeFrequency x:Key="DefaultVisibleWindow" Unit="Minute" Value="5" />

                                    <Style TargetType="local:TimeLineGraph" x:Key="TopAxisStyle">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Grid x:Name="ELEMENT_layoutRoot" Background="{TemplateBinding Background}">
                                                            <Grid.Resources>
                                                                <DataTemplate x:Key="ELEMENT_dynamicMainLayerTemplate">
                                                                    <Grid x:Name="ELEMENT_dynamicMainLayer">
                                                                        <Canvas Background="Transparent" Canvas.ZIndex="10" VerticalAlignment="Top" x:Name="ELEMENT_dynamicTopAxisLayerViewport" Height="30">
                                                                            <Canvas x:Name="ELEMENT_dynamicTopAxisLayer" >

                                                                            </Canvas>
                                                                        </Canvas>
                                                                        <Canvas Canvas.ZIndex="5" x:Name="ELEMENT_dynamicPlotLayerViewport">
                                                                            <Canvas x:Name="ELEMENT_dynamicPlotLayer">
                                                                            </Canvas>
                                                                        </Canvas>
                                                                    </Grid>
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_dataMarkerTemplate">
                                                                    <Rectangle Canvas.ZIndex="10" Height="5" Width="5" Fill="Blue" Stroke="Black" StrokeThickness="3" local:GraphBase.XOffset="-2.5" local:GraphBase.YOffset="-2.5" />
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_PointTemplate">
                                                                    <local:GraphPoint Canvas.ZIndex="9999" Y1="{Binding Y1}" Y2="{Binding Y2}" X1="{Binding DateTime}"/>
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_XAxisLabelTemplate">
                                                                    <TextBlock FontSize="11" />
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_YAxisLabelTemplate">
                                                                    <TextBlock FontSize="11" />
                                                                </DataTemplate>
                                                                <local:TimeFrequency x:Key="DefaultVisibleWindow" Unit="Minute" Value="5" />
                                                            </Grid.Resources>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="0"/>
                                                                <RowDefinition Height="20"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="0"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="185"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="36" />
                                                            </Grid.ColumnDefinitions>

                                                            <Grid Grid.Row="1" Grid.Column="1">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <Border BorderBrush="Gray" Padding="3,1,3,1" BorderThickness="1,0,1,1" Grid.Column="0">
                                                                    <TextBlock Text="" x:Name="ELEMENT_XAxisTitleStartDate" FontSize="14" />
                                                                </Border>
                                                                <Border BorderBrush="Gray" Padding="3,1,3,1" BorderThickness="1,0,1,1" Grid.Column="2">
                                                                    <TextBlock Text="" x:Name="ELEMENT_XAxisTitleEndDate" HorizontalAlignment="Right" FontSize="14"/>
                                                                </Border>
                                                            </Grid>

                                                            <Canvas Grid.Row="2" Grid.Column="1" Canvas.ZIndex="10" Margin="1,0,0,0" x:Name="ELEMENT_dynamicMainLayerViewport"/>
                                                            <Canvas Visibility="Collapsed" Grid.Row="2" Grid.Column="1" Canvas.ZIndex="5" Margin="1,0,0,0" x:Name="ELEMENT_nonDynamicRightAxisViewPort">
                                                                <Canvas x:Name="ELEMENT_NonDynamicRightAxisLabels">
                                                                </Canvas>
                                                                <Canvas x:Name="ELEMENT_NonDynamicRightAxisLines">
                                                                </Canvas>
                                                            </Canvas>
                                                            <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Opacity="0.5"
                                                                    BorderThickness="1,0,1,0" BorderBrush="{StaticResource Control_BorderBrush_Brush}" />

                                                            <ScrollBar  Visibility="Collapsed" Grid.Row="2" Margin="2,2,2,2" Orientation="Vertical" Grid.Column="2" Minimum="-155" Maximum="155" Value="0" SmallChange="5" LargeChange="10" x:Name="ELEMENT_scrollBarVertical"/>
                                                            <ScrollBar  Visibility="Visible" Margin="2,2,2,2" Grid.Row="3" x:Name="ELEMENT_scrollBar"/>
                                                            
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style TargetType="local:TimeLineGraph" x:Key="BottomAxisStyle">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border BorderThickness="0" BorderBrush="Gray" CornerRadius="4">
                                                        <Grid x:Name="ELEMENT_layoutRoot" Background="{TemplateBinding Background}">
                                                            <Grid.Resources>
                                                                <DataTemplate x:Key="ELEMENT_dynamicMainLayerTemplate">
                                                                    <Grid x:Name="ELEMENT_dynamicMainLayer">
                                                                        <Canvas Background="Transparent" Canvas.ZIndex="10" VerticalAlignment="Top" x:Name="ELEMENT_dynamicTopAxisLayerViewport" Height="30">
                                                                            <Canvas x:Name="ELEMENT_dynamicTopAxisLayer" >

                                                                            </Canvas>
                                                                        </Canvas>
                                                                        <Canvas Canvas.ZIndex="5" x:Name="ELEMENT_dynamicPlotLayerViewport">
                                                                            <Canvas x:Name="ELEMENT_dynamicPlotLayer">
                                                                            </Canvas>
                                                                        </Canvas>
                                                                    </Grid>
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_dataMarkerTemplate">
                                                                    <Rectangle Canvas.ZIndex="10" Height="5" Width="5" Fill="Blue" Stroke="Black" StrokeThickness="3" local:GraphBase.XOffset="-2.5" local:GraphBase.YOffset="-2.5" />
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_PointTemplate">
                                                                    <local:GraphPoint Canvas.ZIndex="9999" Y1="{Binding Y1}" Y2="{Binding Y2}" X1="{Binding DateTime}"/>
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_XAxisLabelTemplate">
                                                                    <TextBlock FontSize="11" />
                                                                </DataTemplate>
                                                                <DataTemplate x:Key="ELEMENT_YAxisLabelTemplate">
                                                                    <TextBlock FontSize="11" />
                                                                </DataTemplate>
                                                                <local:TimeFrequency x:Key="DefaultVisibleWindow" Unit="Minute" Value="5" />
                                                            </Grid.Resources>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="0"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="20"/>
                                                                <RowDefinition Height="0"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="185"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="36" />
                                                            </Grid.ColumnDefinitions>

                                                            <Grid Grid.Row="2" Grid.Column="1" Margin="0,0,0,0">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <Border BorderBrush="Gray" Padding="3,1,3,1" BorderThickness="1,1,1,0" Grid.Column="0">
                                                                    <TextBlock Text="" x:Name="ELEMENT_XAxisTitleStartDate" FontSize="14" />
                                                                </Border>
                                                                <Border BorderBrush="Gray" Padding="3,1,3,1" BorderThickness="1,1,1,0" Grid.Column="2">
                                                                    <TextBlock Text="" x:Name="ELEMENT_XAxisTitleEndDate" HorizontalAlignment="Right" FontSize="14"/>
                                                                </Border>
                                                            </Grid>

                                                            <Canvas Grid.Row="1" Grid.Column="1" Canvas.ZIndex="10" Margin="1,0,0,0" x:Name="ELEMENT_dynamicMainLayerViewport"/>
                                                            <Canvas Visibility="Collapsed" Grid.Row="1" Grid.Column="1" Canvas.ZIndex="5" Margin="1,0,0,0" x:Name="ELEMENT_nonDynamicRightAxisViewPort">
                                                                <Canvas x:Name="ELEMENT_NonDynamicRightAxisLabels">
                                                                </Canvas>
                                                                <Canvas x:Name="ELEMENT_NonDynamicRightAxisLines">
                                                                </Canvas>
                                                            </Canvas>
                                                            <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Opacity="0.5"
                                                                    BorderThickness="1,0,1,0" BorderBrush="{StaticResource Control_BorderBrush_Brush}" />

                                                            <ScrollBar  Visibility="Collapsed" Grid.Row="2" Margin="2,2,2,2" Orientation="Vertical" Grid.Column="2" Minimum="-155" Maximum="155" Value="0" SmallChange="5" LargeChange="10" x:Name="ELEMENT_scrollBarVertical"/>
                                                            <ScrollBar  Visibility="Visible" Margin="2,2,2,2" Grid.Row="3" x:Name="ELEMENT_scrollBar"/>
                                                           
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style TargetType="local:VisualFocusLine" x:Key="NowIndicator">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Canvas x:Name="ELEMENT_VisualFocusLineCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Canvas.ZIndex="10">
                                                        <Border x:Name="ELEMENT_TopPlaceHolder" Canvas.ZIndex="1" 
                                                                Background="#FFFFA500" BorderBrush="#FFEC9900" BorderThickness="1" Padding="2,0,2,0">
                                                            <TextBlock x:Name="ELEMENT_TopDateTimeTextBlock" Foreground="Black"  />
                                                        </Border>

                                                        <Rectangle x:Name="FocusVisualElement" Margin="0,0,0,0" Width="0" Fill="#FF448DCA" Opacity="0.0" Visibility="Collapsed" />
                                                        <Line x:Name="ELEMENT_VisualFocusLine" Margin="0,0,0,0" Stroke="#FFEC9900" StrokeThickness="1"/>

                                                        <Border x:Name="ELEMENT_BottomPlaceHolder" Canvas.ZIndex="2" Background="#FFFFA500" 
                                                                BorderBrush="#FFEC9900" BorderThickness="1" Padding="2,0,2,0">
                                                            <TextBlock x:Name="ELEMENT_BottomDateTimeTextBlock" Foreground="Black" />
                                                        </Border>
                                                    </Canvas>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <DataTemplate x:Key="DefaultSectionTemplate">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border Background="#4A7EBB" CornerRadius="3" Padding="3">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding SectionName}" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" />

                                                </Grid>
                                            </Border>
                                            <ScrollViewer Grid.Row="1" Padding="0" Style="{StaticResource TimelineScrollViewerStyle}">
                                                <ItemsControl ItemsSource="{Binding Graphs}">
                                                </ItemsControl>
                                            </ScrollViewer>
                                        </Grid>
                                    </DataTemplate>

                                    <RadialGradientBrush x:Key="EllipseFill">
                                        <GradientStop Color="#FF000000"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </RadialGradientBrush>

                                    <SolidColorBrush x:Key="EllipseStroke" Color="#00000000"/>
                                    
                                    <Storyboard x:Key="LoadingAnimation" RepeatBehavior="Forever">                                        
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0.66"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0.33"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse8" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.655"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.33"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0.66"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                </Grid.Resources>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>                                
                                
                                <!-- Graph Title Area -->
                                <Border x:Name="ELEMENT_TitleFormatTimeGrid" Padding="5,10" BorderThickness="0,0,0,1"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        >
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFB0CBDA" Offset="0"/>
                                            <GradientStop Color="#FF005788" Offset="1"/>
                                            <GradientStop Color="#FF075B8B" Offset="0.634"/>
                                            <GradientStop Color="#FE5992B1" Offset="0.323"/>
                                            <GradientStop Color="#FE76A5BE" Offset="0.185"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <!-- Buttons and Timeselector -->
                                    <Grid VerticalAlignment="Center" x:Name="ELEMENT_FormatGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="0">
                                            <StackPanel.Resources>
                                                <local:TimeFrequencyCollection x:Key="tfc">
                                                    <local:TimeFrequency Unit="Minute" Value="5"/>
                                                    <local:TimeFrequency Unit="Minute" Value="15"/>
                                                    <local:TimeFrequency Unit="Hour" Value="1"/>
                                                    <local:TimeFrequency Unit="Hour" Value="2"/>
                                                    <local:TimeFrequency Unit="Hour" Value="4"/>
                                                    <local:TimeFrequency Unit="Hour" Value="6"/>
                                                    <local:TimeFrequency Unit="Hour" Value="12"/>
                                                    <local:TimeFrequency Unit="Hour" Value="24"/>
                                                    <local:TimeFrequency Unit="Hour" Value="48"/>
                                                    <local:TimeFrequency Unit="Day" Value="5"/>
                                                    <local:TimeFrequency Unit="Day" Value="10"/>
                                                    <local:TimeFrequency Unit="Day" Value="15"/>
                                                    <local:TimeFrequency Unit="Day" Value="20"/>
                                                    <local:TimeFrequency Unit="Month" Value="1"/>
                                                    <local:TimeFrequency Unit="Month" Value="3"/>
                                                    <local:TimeFrequency Unit="Month" Value="6"/>
                                                    <local:TimeFrequency Unit="Month" Value="9"/>
                                                    <local:TimeFrequency Unit="Month" Value="12"/>
                                                    <local:TimeFrequency Unit="Month" Value="18"/>
                                                    <local:TimeFrequency Unit="Year" Value="2"/>
                                                    <local:TimeFrequency Unit="Year" Value="5"/>
                                                    <local:TimeFrequency Unit="Year" Value="10"/>
                                                    <local:TimeFrequency Unit="Year" Value="20"/>
                                                    <local:TimeFrequency Unit="Year" Value="100"/>
                                                </local:TimeFrequencyCollection>
                                            </StackPanel.Resources>                                            
                                            
                                            <TextBlock Text="Period" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,0,0" FontSize="11"/>
                                            <ComboBox VerticalAlignment="Center" Margin="5,0,5,0" Width="120" Height="25" FontSize="12"
                                                      x:Name="ELEMENT_TimeSelector" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" 
                                                      ItemsSource="{Binding Source={StaticResource tfc}}"      
                                                      Style="{StaticResource ComboBoxStyle}"
                                                      SelectedItem="{Binding TimeFrequency, Source={StaticResource timeFrequency}, Mode=TwoWay}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Description}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                            <Button x:Name="ELEMENT_ScrollToNow" HorizontalAlignment="Right" VerticalAlignment="Stretch" ToolTipService.ToolTip="Scroll to the current time" Style="{StaticResource ToolbarButton_Style}">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Grid Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" Width="12">
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Margin="0,0,0,1" UseLayoutRounding="False" Data="M52.589622,79.760414 L52.527191,89.333008 L47.974781,89.322914 L54.601536,95.125229 L60.624207,89.302101 L56.019451,89.281265 L55.967445,79.791336 z"/>
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Height="1" Margin="2.202,0,1.798,0" VerticalAlignment="Bottom" UseLayoutRounding="False" Data="M109.5,146.214 L116.25,146.214"/>
                                                        </Grid>

                                                        <TextBlock Text="Jump to Now" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <Button x:Name="ELEMENT_Reset" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="10,0" ToolTipService.ToolTip="Reset the timeline to the default view" Style="{StaticResource ToolbarButton_Style}">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Grid Height="11" HorizontalAlignment="Left" VerticalAlignment="Top" Width="16">
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Margin="0.999,0,-0.41,0.531" UseLayoutRounding="False" Data="M83.666664,134.08333 L78.458,136.41701 L79.083,134.12534 C76.698044,132.82683 74.556328,133.42589 72.583,135.62512 C72.791656,132.62573 75.973549,130.89413 79.833107,131.37572 L80.416428,129.20935 z" RenderTransformOrigin="0.5,0.5">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform ScaleX="-1"/>
                                                                        <SkewTransform AngleX="0" AngleY="0"/>
                                                                        <RotateTransform Angle="0"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" HorizontalAlignment="Left" Margin="0,2.664,0,0.336" Width="1" UseLayoutRounding="False" Data="M136.875,131.245 L136.875,146.578"/>
                                                        </Grid>
                                                        <TextBlock Text="Reset" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <Button x:Name="ELEMENT_Refresh" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="10,0" ToolTipService.ToolTip="Refresh the timeline’s data and view" Style="{StaticResource ToolbarButton_Style}">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Grid Height="16" Width="12">
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Height="8.209" Margin="0.583,0,0.333,0" VerticalAlignment="Top" UseLayoutRounding="False" Data="M83.666664,134.08333 L78.458,136.41701 L79.083,134.12534 C76.698044,132.82683 74.556328,133.42589 72.583,135.62512 C72.791656,132.62573 75.973549,130.89413 79.833107,131.37572 L80.416428,129.20935 z"/>
                                                            <Path Stretch="Fill" Stroke="#FFE4E4E4" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeStartLineCap="Round" Margin="0,8.499,0.916,0.292" UseLayoutRounding="False" Data="M83.666664,134.08333 L78.458,136.41701 L79.083,134.12534 C76.698044,132.82683 74.556328,133.42589 72.583,135.62512 C72.791656,132.62573 75.973549,130.89413 79.833107,131.37572 L80.416428,129.20935 z" RenderTransformOrigin="0.5,0.5">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="180"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Grid>
                                                        <TextBlock Text="Refresh" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>

                                <!-- Graph Area -->
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,0" Grid.Row="1" Padding="3,0,3,0">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" x:Name="ELEMENT_GraphArea" Background="{TemplateBinding Background}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <!-- Visual Focus Line -->
                                        <local:VisualFocusLine x:Name="ELEMENT_VisualFocusLine" 
                                                               Visibility="Collapsed" 
                                                               Grid.Row="0" Grid.RowSpan="3" Canvas.ZIndex="99" 
                                                               IsTabStop="False"
                                                               Style="{StaticResource NowIndicator}"
                                                               AllowDragDrop="False"
                                                               Margin="213,1,0,1"
                                                               />

                                        <!-- Top Axis>-->
                                        <local:TimeLineGraph x:Name="ELEMENT_TopAxis" 
                                                             Margin="26,0,0,0"
                                                             Style="{StaticResource TopAxisStyle}"
                                                             PlotData="False" 
                                                             IsTabStop="False" 
                                                             Grid.Row="0"
                                                             />


                                        <!-- Graphs Collection -->
                                        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="0" x:Name="ELEMENT_GraphPanel">
                                            <Grid x:Name="ELEMENT_RootPanel">
                                            </Grid>
                                        </Border>

                                        <!-- Bottom Axis -->
                                        <local:TimeLineGraph x:Name="ELEMENT_BottomAxis" 
                                                             Margin="26,0,0,0"
                                                             Style="{StaticResource BottomAxisStyle}"
                                                             PlotData="False" 
                                                             PlotTicksBeforeLabels="True" 
                                                             IsTabStop="False" 
                                                             Grid.Row="2"
                                                             />

                                        <!-- Horizontal Scrollbar -->
                                        <ScrollBar x:Name="ELEMENT_ScrollBar" 
                                                   Orientation="Horizontal" 
                                                   IsTabStop="True"
                                                   Margin="211,0,1,1"
                                                   Grid.Row="3"
                                                   Background="{StaticResource Control_Background_Brush}"
                                                   Style="{StaticResource TimelineScrollBarStyle}"
                                                   BorderBrush="{StaticResource Control_BorderBrush_Brush}"
                                                   BorderThickness="1"
                                                   />


                                        <!-- The Visual Focus Indicator for the Graphs -->
                                        <Rectangle Grid.Row="1" x:Name="FocusVisualElement" Opacity="0" IsHitTestVisible="False" StrokeThickness="1" Stroke="Black" StrokeDashArray="3 4" />

                                        <!-- The Visual Focus Indicator for the horizontal scrollbar -->
                                        <Rectangle Grid.Row="3" x:Name="ScrollBarFocusVisualElement" Opacity="0"  Margin="210,1,0,1" IsHitTestVisible="False" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 3" />

                                    </Grid>
                                </Border>
                                
                                <!-- Wait Content Area -->
                                <Border x:Name="WaitContent" Grid.RowSpan="2" 
                                        Background="White" Opacity="1"
                                        BorderBrush="Black" BorderThickness="1" CornerRadius="2"
                                        Canvas.ZIndex="100"
                                        IsHitTestVisible="False"
                                        Margin="2">
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">

                                        <Grid Height="90" Width="90" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" VerticalAlignment="Top" HorizontalAlignment="Center" Width="20" Height="20" x:Name="ellipse1" Opacity="1" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Width="20" Margin="0,10,10,0" x:Name="ellipse2" Opacity="0" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" Height="20" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0" Width="20" x:Name="ellipse3" Opacity="0" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" HorizontalAlignment="Right" Margin="0,0,10,10" Width="20" VerticalAlignment="Bottom" Height="20" x:Name="ellipse4" Opacity="0" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" HorizontalAlignment="Center" Margin="0,0,0,0" Width="20" Height="20" VerticalAlignment="Bottom" x:Name="ellipse5" Opacity="0" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" Margin="10,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="20" x:Name="ellipse6" Opacity="0" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" Margin="0,0,0,0" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left" Width="20" x:Name="ellipse7" Opacity="0.33" />
                                            <Ellipse Stroke="{StaticResource EllipseStroke}" Fill="{StaticResource EllipseFill}" Margin="10,10,0,0" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="20" x:Name="ellipse8" Opacity="0.66" />
                                        </Grid>

                                        <TextBlock Text="Loading" HorizontalAlignment="Center" Margin="0,10,0,0" />
                                    </StackPanel>

                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
