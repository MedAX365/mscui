//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Cui.Controls.Common.DateAndTime.Resources
{
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CuiTimeResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CuiTimeResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Cui.Controls.Common.DateAndTime.Resources.CuiTimeResources", typeof(CuiTimeResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instruction is of an invalid format.
        /// </summary>
        internal static string AddInstructionInvalidFormat {
            get {
                return ResourceManager.GetString("AddInstructionInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Approx.
        /// </summary>
        internal static string Approximate {
            get {
                return ResourceManager.GetString("Approximate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.
        /// </summary>
        internal static string ApproximateTimeFormat {
            get {
                return ResourceManager.GetString("ApproximateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The set of arithmetic time resources are not unique or the values are not a single character long..
        /// </summary>
        internal static string ArithmeticSetInvalidResources {
            get {
                return ResourceManager.GetString("ArithmeticSetInvalidResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to h.
        /// </summary>
        internal static string HoursUnit {
            get {
                return ResourceManager.GetString("HoursUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to m.
        /// </summary>
        internal static string MinutesUnit {
            get {
                return ResourceManager.GetString("MinutesUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NullIndex out of allowed range {0} to {1}..
        /// </summary>
        internal static string NullIndexOutOfAcceptedRange {
            get {
                return ResourceManager.GetString("NullIndexOutOfAcceptedRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null or empty null strings are not allowed.
        /// </summary>
        internal static string NullStringNullOrEmpty {
            get {
                return ResourceManager.GetString("NullStringNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse &apos;time&apos;, is badly formatted.
        /// </summary>
        internal static string ParseCalledWithBadFormat {
            get {
                return ResourceManager.GetString("ParseCalledWithBadFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showApproxIndicatorWhenApproximate can only be True when the TimeType is Approximate.
        /// </summary>
        internal static string ShowApproxIndicatorInvalidForTimeType {
            get {
                return ResourceManager.GetString("ShowApproxIndicatorInvalidForTimeType", resourceCulture);
            }
        }
    }
}
