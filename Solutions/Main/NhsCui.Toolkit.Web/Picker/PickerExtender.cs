// <auto-generated>
//-----------------------------------------------------------------------
// <copyright file="PickerExtender.cs" company="Microsoft Corporation and Crown copyright 2007 - 2010.">
// Copyright (c) Microsoft Corporation and Crown copyright 2007 - 2010.
// All rights reserved.
//
// CERTAIN PARTS OF THIS WORK CONTAIN SOFTWARE CODE THAT IS LICENSED 
// FOR USE UNDER THE MICROSOFT PUBLIC LICENSE. DISTRIBUTION, IN SOURCE CODE 
// OR OBJECT CODE FORM, OF THOSE PARTS MUST COMPLY WITH THE TERMS OF THE 
// PUBLIC LICENSE. SEE http://www.microsoft.com/opensource/licenses.mspx 
// FOR DETAILS.  
// IF YOU BRING A PATENT CLAIM AGAINST ANY CONTRIBUTOR OVER PATENTS THAT 
// YOU CLAIM ARE INFRINGED BY THE PUBLIC LICENSE SOFTWARE, YOUR PATENT 
// LICENSE FROM SUCH CONTRIBUTOR TO THE SOFTWARE ENDS AUTOMATICALLY.
//
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
// </copyright>
//-----------------------------------------------------------------------
// </auto-generated>
using System;
using System.Web.UI.WebControls;
using System.Web.UI;
using System.ComponentModel;
using System.ComponentModel.Design;

using AjaxControlToolkit;

using NhsCui.Toolkit.Web;

#region Assembly Resource Attribute
[assembly: System.Web.UI.WebResource("NhsCui.Toolkit.Web.Picker.PickerBehavior.js", "text/javascript")]
#endregion

namespace NhsCui.Toolkit.Web
{
    [Designer(typeof(PickerDesigner))]
    [RequiredScript(typeof(CommonToolkitScripts))]
    [RequiredScript(typeof(DateTimeScripts))]
    [TargetControlType(typeof(TextBox))]
    [ToolboxItem(false)]
    [ClientScriptResource("NhsCui.Toolkit.Web.PickerBehavior", "NhsCui.Toolkit.Web.Picker.PickerBehavior.js")]
    public class PickerExtender : ExtenderControlBase
    {
        [DefaultValue("d")]
        [ExtenderControlProperty]
        [ClientPropertyName("format")]
        public virtual string Format
        {
            get { return GetPropertyValue("Format", "d"); }
            set { SetPropertyValue("Format", value); }
        }

        [DefaultValue(PickerDataType.DateTime)]
        [ExtenderControlProperty]
        [ClientPropertyName("dataType")]
        public virtual PickerDataType DataType
        {
            get { return GetPropertyValue("DataType", PickerDataType.DateTime); }
            set { SetPropertyValue("DataType", value); }
        }

        [DefaultValue(true)]
        [ExtenderControlProperty]
        [ClientPropertyName("nullable")]
        public virtual bool Nullable
        {
            get { return GetPropertyValue("Nullable", true); }
            set { SetPropertyValue("Nullable", value); }
        }

        [DefaultValue(true)]
        [ExtenderControlProperty]
        [ClientPropertyName("acceptKeyDigitInput")]
        public virtual bool AcceptKeyDigitInput
        {
            get { return GetPropertyValue("AcceptKeyDigitInput",true); }
            set { SetPropertyValue("AcceptKeyDigitInput", value); }
        }

        [DefaultValue(true)]
        [ExtenderControlProperty]
        [ClientPropertyName("holdOwnValueState")]
        public virtual bool HoldOwnValueState
        {
            get { return GetPropertyValue("HoldOwnValueState", true); }
            set { SetPropertyValue("HoldOwnValueState", value); }
        }
    }
}