// <auto-generated>
//-----------------------------------------------------------------------
// <copyright file="Validation.cs" company="Microsoft Corporation and Crown copyright 2007 - 2010.">
// Copyright (c) Microsoft Corporation and Crown copyright 2007 - 2010.
// All rights reserved.
//
// CERTAIN PARTS OF THIS WORK CONTAIN SOFTWARE CODE THAT IS LICENSED 
// FOR USE UNDER THE MICROSOFT PUBLIC LICENSE. DISTRIBUTION, IN SOURCE CODE 
// OR OBJECT CODE FORM, OF THOSE PARTS MUST COMPLY WITH THE TERMS OF THE 
// PUBLIC LICENSE. SEE http://www.microsoft.com/opensource/licenses.mspx 
// FOR DETAILS.  
// IF YOU BRING A PATENT CLAIM AGAINST ANY CONTRIBUTOR OVER PATENTS THAT 
// YOU CLAIM ARE INFRINGED BY THE PUBLIC LICENSE SOFTWARE, YOUR PATENT 
// LICENSE FROM SUCH CONTRIBUTOR TO THE SOFTWARE ENDS AUTOMATICALLY.
//
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
// </copyright>
//-----------------------------------------------------------------------
// </auto-generated>
[assembly: System.Web.UI.WebResource("NhsCui.Toolkit.Web.Validators.NhsCuiValidation.js", "application/x-javascript")]
namespace NhsCui.Toolkit.Web
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Web;
    using System.Web.UI;
    using System.Web.UI.WebControls;

    public sealed class Validation
    {
        /// <summary>
        /// Empty private constructor
        /// </summary>
        private Validation()
        {

        }
        
        /// <summary>
        /// Check if there is a Validator attached to this DateInputBox
        /// </summary>
        /// <returns>True if one is attached</returns>
        /// <param name="validatorType">The Validator's Type we are checking for</param>
        /// <param name="currentPage">Page the validator is on</param>
        /// <param name="checkClientScriptEnabled">Only consider the validator attached if EnableClientScript is true</param>
        public static bool ValidatorAttached(Type validatorType, Page currentPage, bool checkClientScriptEnabled)
        {
            if (currentPage != null)
            {
                foreach (IValidator validator in currentPage.Validators)
                {
                    if (validator.GetType() == validatorType)
                    {
                        // We have a matching validator. Now check it is enabled
                        BaseValidator baseValidator = validator as BaseValidator;

                        // If the validator is a "BaseValidator" check it is Enabled and if requested check EnableClientScript is true too
                        if (baseValidator != null &&
                            baseValidator.Enabled == true &&
                            (checkClientScriptEnabled == false || baseValidator.EnableClientScript == true))
                        {
                            return true;
                        }
                    }
                } 
            }

            return false;
        }
    }
}
