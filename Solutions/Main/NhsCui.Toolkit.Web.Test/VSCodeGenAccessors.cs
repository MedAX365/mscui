// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Diagnostics.CodeAnalysis;

namespace NhsCui.Toolkit.Web.Test
{
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class BaseAccessor
    {

        protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;

        protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type)
        {
            m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
        }

        protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type)
            :
                this(null, type)
        {
        }

        internal virtual object Target
        {
            get
            {
                return m_privateObject.Target;
            }
        }

        public override string ToString()
        {
            return this.Target.ToString();
        }

        public override bool Equals(object obj)
        {
            if (typeof(BaseAccessor).IsInstanceOfType(obj))
            {
                obj = ((BaseAccessor)(obj)).Target;
            }
            return this.Target.Equals(obj);
        }

        public override int GetHashCode()
        {
            return this.Target.GetHashCode();
        }
    }


    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_GenderLabelAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.Web.GenderLabel));

        internal NhsCui_Toolkit_Web_GenderLabelAccessor(global::NhsCui.Toolkit.Web.GenderLabel target)
            :
                base(target, m_privateType)
        {
        }

        internal void RenderContents(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("RenderContents", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args, System.Globalization.CultureInfo.CurrentCulture);
        }
    }
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_GenderLabelControl_ResourcesAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.GenderLabelControl.Resources");

        internal NhsCui_Toolkit_Web_GenderLabelControl_ResourcesAccessor(object target)
            :
                base(target, m_privateType)
        {
        }

        internal static global::System.Resources.ResourceManager resourceMan
        {
            get
            {
                global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticField("resourceMan")));
                return ret;
            }
            set
            {
                m_privateType.SetStaticField("resourceMan", value);
            }
        }

        internal static global::System.Globalization.CultureInfo resourceCulture
        {
            get
            {
                global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticField("resourceCulture")));
                return ret;
            }
            set
            {
                m_privateType.SetStaticField("resourceCulture", value);
            }
        }

        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                global::System.Resources.ResourceManager ret = ((global::System.Resources.ResourceManager)(m_privateType.GetStaticProperty("ResourceManager")));
                return ret;
            }
        }

        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                global::System.Globalization.CultureInfo ret = ((global::System.Globalization.CultureInfo)(m_privateType.GetStaticProperty("Culture")));
                return ret;
            }
            set
            {
                m_privateType.SetStaticProperty("Culture", value);
            }
        }

        internal static string Female
        {
            get
            {
                string ret = ((string)(m_privateType.GetStaticProperty("Female")));
                return ret;
            }
        }

        internal static string Male
        {
            get
            {
                string ret = ((string)(m_privateType.GetStaticProperty("Male")));
                return ret;
            }
        }

        internal static string NotKnown
        {
            get
            {
                string ret = ((string)(m_privateType.GetStaticProperty("NotKnown")));
                return ret;
            }
        }

        internal static object CreatePrivate()
        {
            object[] args = new object[0];
            Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.GenderLabelControl.Resources", new System.Type[0], args);
            return priv_obj.Target;
        }
    }
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_NameLabelAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.Web.NameLabel));

        internal NhsCui_Toolkit_Web_NameLabelAccessor(global::NhsCui.Toolkit.Web.NameLabel target)
            :
                base(target, m_privateType)
        {
        }

        internal global::System.Web.UI.WebControls.Style itemStyle
        {
            get
            {
                global::System.Web.UI.WebControls.Style ret = ((global::System.Web.UI.WebControls.Style)(m_privateObject.GetField("itemStyle")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("itemStyle", value);
            }
        }

        internal void TrackViewState()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("TrackViewState", new System.Type[0], args);
        }

        internal void RenderContents(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("RenderContents", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }

        internal static void RenderText(global::System.Web.UI.HtmlTextWriter writer, string text, bool encode)
        {
            object[] args = new object[] {
                writer,
                text,
                encode};
            m_privateType.InvokeStatic("RenderText", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter),
                    typeof(string),
                    typeof(bool)}, args);
        }

        internal void RenderContentsInternal(global::System.Web.UI.HtmlTextWriter writer, bool forHtml)
        {
            object[] args = new object[] {
                writer,
                forHtml};
            m_privateObject.Invoke("RenderContentsInternal", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter),
                    typeof(bool)}, args);
        }

        internal void RenderNameItem(global::System.Web.UI.HtmlTextWriter writer, string nameItem, string prefix, bool forHtml)
        {
            object[] args = new object[] {
                writer,
                nameItem,
                prefix,
                forHtml};
            m_privateObject.Invoke("RenderNameItem", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter),
                    typeof(string),
                    typeof(string),
                    typeof(bool)}, args);
        }
    }
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_IdentifierLabelAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.Web.IdentifierLabel));

        internal NhsCui_Toolkit_Web_IdentifierLabelAccessor(global::NhsCui.Toolkit.Web.IdentifierLabel target)
            :
                base(target, m_privateType)
        {
        }

        internal global::System.Web.UI.WebControls.Style ItemStyle
        {
            get
            {
                global::System.Web.UI.WebControls.Style ret = ((global::System.Web.UI.WebControls.Style)(m_privateObject.GetField("itemStyle")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("itemStyle", value);
            }
        }

        internal global::System.Web.UI.WebControls.Style ItemLabelStyle
        {
            get
            {
                global::System.Web.UI.WebControls.Style ret = ((global::System.Web.UI.WebControls.Style)(m_privateObject.GetField("itemLabelStyle")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("itemLabelStyle", value);
            }
        }

        internal void RenderContents(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("RenderContents", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_MedicationLineAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.Web.MedicationLine));

        internal NhsCui_Toolkit_Web_MedicationLineAccessor(global::NhsCui.Toolkit.Web.MedicationLine target)
            :
                base(target, m_privateType)
        {
        }

        internal global::NhsCui.Toolkit.Web.Medication medication
        {
            get
            {
                global::NhsCui.Toolkit.Web.Medication ret = ((global::NhsCui.Toolkit.Web.Medication)(m_privateObject.GetField("medication")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("medication", value);
            }
        }

        internal string onclientClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetField("onclientClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("onclientClick", value);
            }
        }

        internal string onclientDoubleClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetField("onclientDoubleClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("onclientDoubleClick", value);
            }
        }

        internal string onclientRightClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetField("onclientRightClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("onclientRightClick", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlTableCell startDateCell
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateObject.GetField("startDateCell")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("startDateCell", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlTableCell graphicsCell
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateObject.GetField("graphicsCell")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("graphicsCell", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlTableCell drugDetailsCell
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateObject.GetField("drugDetailsCell")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("drugDetailsCell", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlTableCell reasonCell
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateObject.GetField("reasonCell")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("reasonCell", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlTableCell statusCell
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateObject.GetField("statusCell")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("statusCell", value);
            }
        }

        internal global::NhsCui.Toolkit.Web.DateLabel startDateLabel
        {
            get
            {
                global::NhsCui.Toolkit.Web.DateLabel ret = ((global::NhsCui.Toolkit.Web.DateLabel)(m_privateObject.GetField("startDateLabel")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("startDateLabel", value);
            }
        }

        internal global::NhsCui.Toolkit.Web.DateLabel statusDateLabel
        {
            get
            {
                global::NhsCui.Toolkit.Web.DateLabel ret = ((global::NhsCui.Toolkit.Web.DateLabel)(m_privateObject.GetField("statusDateLabel")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("statusDateLabel", value);
            }
        }

        internal global::System.Web.UI.WebControls.Image indicatorGraphic
        {
            get
            {
                global::System.Web.UI.WebControls.Image ret = ((global::System.Web.UI.WebControls.Image)(m_privateObject.GetField("indicatorGraphic")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("indicatorGraphic", value);
            }
        }

        internal global::System.Web.UI.WebControls.Image criticalAlertGraphic
        {
            get
            {
                global::System.Web.UI.WebControls.Image ret = ((global::System.Web.UI.WebControls.Image)(m_privateObject.GetField("criticalAlertGraphic")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("criticalAlertGraphic", value);
            }
        }

        internal global::NhsCui.Toolkit.Web.MedicationNameLabel medLabel
        {
            get
            {
                global::NhsCui.Toolkit.Web.MedicationNameLabel ret = ((global::NhsCui.Toolkit.Web.MedicationNameLabel)(m_privateObject.GetField("medLabel")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("medLabel", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlGenericControl dosageText
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateObject.GetField("dosageText")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("dosageText", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlGenericControl reasonText
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateObject.GetField("reasonText")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("reasonText", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlGenericControl statusSpacer
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateObject.GetField("statusSpacer")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("statusSpacer", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlGenericControl dosageSpacer
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateObject.GetField("dosageSpacer")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("dosageSpacer", value);
            }
        }

        internal global::System.Web.UI.HtmlControls.HtmlGenericControl statusText
        {
            get
            {
                global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateObject.GetField("statusText")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("statusText", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void Render(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("Render", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnPropertyChanged", new System.Type[] {
                    typeof(global::System.ComponentModel.PropertyChangedEventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnClick(global::System.EventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnClick", new System.Type[] {
                    typeof(global::System.EventArgs)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnDoubleClick(global::System.EventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnDoubleClick", new System.Type[] {
                    typeof(global::System.EventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void EnsureChildControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("EnsureChildControls", new System.Type[0], args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddAttributesToRender(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("AddAttributesToRender", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void CreateChildControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("CreateChildControls", new System.Type[0], args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void LoadViewState(object savedState)
        {
            object[] args = new object[] {
                savedState};
            m_privateObject.Invoke("LoadViewState", new System.Type[] {
                    typeof(object)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal object SaveViewState()
        {
            object[] args = new object[0];
            object ret = ((object)(m_privateObject.Invoke("SaveViewState", new System.Type[0], args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal static global::System.Web.UI.HtmlControls.HtmlTableCell AddColumn(string id, bool wrap, global::System.Web.UI.WebControls.VerticalAlign verticalAlign, global::System.Web.UI.WebControls.HorizontalAlign horizontalAlign)
        {
            object[] args = new object[] {
                id,
                wrap,
                verticalAlign,
                horizontalAlign};
            global::System.Web.UI.HtmlControls.HtmlTableCell ret = ((global::System.Web.UI.HtmlControls.HtmlTableCell)(m_privateType.InvokeStatic("AddColumn", new System.Type[] {
                    typeof(string),
                    typeof(bool),
                    typeof(global::System.Web.UI.WebControls.VerticalAlign),
                    typeof(global::System.Web.UI.WebControls.HorizontalAlign)}, args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal static global::System.Web.UI.HtmlControls.HtmlGenericControl AddSpacer(string id)
        {
            object[] args = new object[] {
                id};                                    
            global::System.Web.UI.HtmlControls.HtmlGenericControl ret = ((global::System.Web.UI.HtmlControls.HtmlGenericControl)(m_privateType.InvokeStatic("AddSpacer", new System.Type[] {
                    typeof(string)}, args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal static void AddCssClass(global::System.Web.UI.HtmlControls.HtmlControl control, string classname)
        {
            object[] args = new object[] {
                control,
                classname};
            m_privateType.InvokeStatic("AddCssClass", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlControls.HtmlControl),
                    typeof(string)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void NotifyPropertyChanged(string propertyName)
        {
            object[] args = new object[] {
                propertyName};
            m_privateObject.Invoke("NotifyPropertyChanged", new System.Type[] {
                    typeof(string)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("AddControls", new System.Type[0], args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void ConfigureControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("ConfigureControls", new System.Type[0], args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void ApplyShowRules()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("ApplyShowRules", new System.Type[0], args);
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_MedicationGridAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::NhsCui.Toolkit.Web.MedicationGrid));

        internal NhsCui_Toolkit_Web_MedicationGridAccessor(global::NhsCui.Toolkit.Web.MedicationGrid target)
            :
                base(target, m_privateType)
        {
        }

        internal global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationGridExtenderAccessor medicationGridExtender
        {
            get
            {
                object _ret_val = m_privateObject.GetField("medicationGridExtender");
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationGridExtenderAccessor _ret = null;
                if ((_ret_val != null))
                {
                    _ret = new global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationGridExtenderAccessor(_ret_val);
                }
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationGridExtenderAccessor ret = _ret;
                return ret;
            }
            set
            {
                m_privateObject.SetField("medicationGridExtender", value);
            }
        }

        internal global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor lookBehindListView
        {
            get
            {
                object _ret_val = m_privateObject.GetField("lookBehindListView");
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor _ret = null;
                if ((_ret_val != null))
                {
                    _ret = new global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor(_ret_val);
                }
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor ret = _ret;
                return ret;
            }
            set
            {
                m_privateObject.SetField("lookBehindListView", value);
            }
        }

        internal global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor lookAheadListView
        {
            get
            {
                object _ret_val = m_privateObject.GetField("lookAheadListView");
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor _ret = null;
                if ((_ret_val != null))
                {
                    _ret = new global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor(_ret_val);
                }
                global::NhsCui.Toolkit.Web.Test.NhsCui_Toolkit_Web_MedicationListViewAccessor ret = _ret;
                return ret;
            }
            set
            {
                m_privateObject.SetField("lookAheadListView", value);
            }
        }

        internal bool applyShowRules
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetField("applyShowRules")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("applyShowRules", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddAttributesToRender(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("AddAttributesToRender", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void CreateChildControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("CreateChildControls", new System.Type[0], args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnPreRender(global::System.EventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnPreRender", new System.Type[] {
                    typeof(global::System.EventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void Render(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("Render", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnClick(global::NhsCui.Toolkit.Web.MedicationEventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnClick", new System.Type[] {
                    typeof(global::NhsCui.Toolkit.Web.MedicationEventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnDoubleClick(global::NhsCui.Toolkit.Web.MedicationEventArgs e)
        {
            object[] args = new object[] {
                e};
            m_privateObject.Invoke("OnDoubleClick", new System.Type[] {
                    typeof(global::NhsCui.Toolkit.Web.MedicationEventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal static int CompareStartDate(global::NhsCui.Toolkit.Web.Medication x, global::NhsCui.Toolkit.Web.Medication y, bool ascending)
        {
            object[] args = new object[] {
                x,
                y,
                ascending};
            int ret = ((int)(m_privateType.InvokeStatic("CompareStartDate", new System.Type[] {
                    typeof(global::NhsCui.Toolkit.Web.Medication),
                    typeof(global::NhsCui.Toolkit.Web.Medication),
                    typeof(bool)}, args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddChildControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("AddChildControls", new System.Type[0], args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs propertyChangedEventArgs)
        {
            object[] args = new object[] {
                propertyChangedEventArgs};
            m_privateObject.Invoke("OnPropertyChanged", new System.Type[] {
                    typeof(global::System.ComponentModel.PropertyChangedEventArgs)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void NotifyPropertyChanged(string parameterName)
        {
            object[] args = new object[] {
                parameterName};
            m_privateObject.Invoke("NotifyPropertyChanged", new System.Type[] {
                    typeof(string)}, args);
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal global::NhsCui.Toolkit.Web.Medication FindMedication(string id)
        {
            object[] args = new object[] {
                id};
            global::NhsCui.Toolkit.Web.Medication ret = ((global::NhsCui.Toolkit.Web.Medication)(m_privateObject.Invoke("FindMedication", new System.Type[] {
                    typeof(string)}, args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void ApplyShowRules()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("ApplyShowRules", new System.Type[0], args);
        }
    }
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_MedicationGridExtenderAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.MedicationGridExtender");

        internal NhsCui_Toolkit_Web_MedicationGridExtenderAccessor(object target)
            :
                base(target, m_privateType)
        {
        }

        internal System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication> Items
        {
            get
            {
                System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication> ret = ((System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication>)(m_privateObject.GetProperty("Items")));
                return ret;
            }
        }

        internal bool SimpleMode
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("SimpleMode")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("SimpleMode", value);
            }
        }

        internal bool ShowLookAheadBehind
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowLookAheadBehind")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowLookAheadBehind", value);
            }
        }

        internal string DrugDetailsColumnHeaderText
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("DrugDetailsColumnHeaderText")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("DrugDetailsColumnHeaderText", value);
            }
        }

        internal string ReasonColumnHeaderText
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("ReasonColumnHeaderText")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ReasonColumnHeaderText", value);
            }
        }

        internal string StartDateColumnHeaderText
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("StartDateColumnHeaderText")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("StartDateColumnHeaderText", value);
            }
        }

        internal string StatusColumnHeaderText
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("StatusColumnHeaderText")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("StatusColumnHeaderText", value);
            }
        }

        internal bool ShowDosageDetails
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowDosageDetails")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowDosageDetails", value);
            }
        }

        internal bool ShowGraphics
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowGraphics")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowGraphics", value);
            }
        }

        internal bool ShowReason
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowReason")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowReason", value);
            }
        }

        internal bool ShowStatusDate
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowStatusDate")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowStatusDate", value);
            }
        }

        internal bool ShowStatus
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowStatus")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowStatus", value);
            }
        }

        internal string LookBehindControlID
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("LookBehindControlID")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("LookBehindControlID", value);
            }
        }

        internal string LookAheadControlID
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("LookAheadControlID")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("LookAheadControlID", value);
            }
        }

        internal global::System.Web.UI.WebControls.Unit StartDateColumnWidth
        {
            get
            {
                global::System.Web.UI.WebControls.Unit ret = ((global::System.Web.UI.WebControls.Unit)(m_privateObject.GetProperty("StartDateColumnWidth")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("StartDateColumnWidth", value);
            }
        }

        internal global::System.Web.UI.WebControls.Unit DrugDetailsColumnWidth
        {
            get
            {
                global::System.Web.UI.WebControls.Unit ret = ((global::System.Web.UI.WebControls.Unit)(m_privateObject.GetProperty("DrugDetailsColumnWidth")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("DrugDetailsColumnWidth", value);
            }
        }

        internal global::System.Web.UI.WebControls.Unit ReasonColumnWidth
        {
            get
            {
                global::System.Web.UI.WebControls.Unit ret = ((global::System.Web.UI.WebControls.Unit)(m_privateObject.GetProperty("ReasonColumnWidth")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ReasonColumnWidth", value);
            }
        }

        internal global::System.Web.UI.WebControls.Unit StatusColumnWidth
        {
            get
            {
                global::System.Web.UI.WebControls.Unit ret = ((global::System.Web.UI.WebControls.Unit)(m_privateObject.GetProperty("StatusColumnWidth")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("StatusColumnWidth", value);
            }
        }

        internal string OnClientClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("OnClientClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("OnClientClick", value);
            }
        }

        internal string OnClientDoubleClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("OnClientDoubleClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("OnClientDoubleClick", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal string OnClientRightClick
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("OnClientRightClick")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("OnClientRightClick", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal string CallbackID
        {
            get
            {
                string ret = ((string)(m_privateObject.GetProperty("CallbackID")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("CallbackID", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal bool ClickPostBack
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ClickPostBack")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ClickPostBack", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal bool DoubleClickPostBack
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("DoubleClickPostBack")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("DoubleClickPostBack", value);
            }
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal static global::AjaxControlToolkit.ExtenderControlBase CreatePrivate()
        {
            object[] args = new object[0];
            Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.MedicationGridExtender", new System.Type[0], args);
            return ((global::AjaxControlToolkit.ExtenderControlBase)(priv_obj.Target));
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void LoadViewState(object savedState)
        {
            object[] args = new object[] {
                savedState};
            m_privateObject.Invoke("LoadViewState", new System.Type[] {
                    typeof(object)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal object SaveViewState()
        {
            object[] args = new object[0];
            object ret = ((object)(m_privateObject.Invoke("SaveViewState", new System.Type[0], args)));
            return ret;
        }


        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void MedicationGridExtender_ClientStateValuesLoaded(object sender, global::System.EventArgs e)
        {
            object[] args = new object[] {
                sender,
                e};
            m_privateObject.Invoke("MedicationGridExtender_ClientStateValuesLoaded", new System.Type[] {
                    typeof(object),
                    typeof(global::System.EventArgs)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void SetSelectedItems(string clientState)
        {
            object[] args = new object[] {
                clientState};
            m_privateObject.Invoke("SetSelectedItems", new System.Type[] {
                    typeof(string)}, args);
        }
    }
    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
    internal class NhsCui_Toolkit_Web_MedicationListViewAccessor : BaseAccessor
    {

        protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.MedicationListView");

        internal NhsCui_Toolkit_Web_MedicationListViewAccessor(object target)
            :
                base(target, m_privateType)
        {
        }

        internal global::NhsCui.Toolkit.Web.MedicationListViewMode mode
        {
            get
            {
                global::NhsCui.Toolkit.Web.MedicationListViewMode ret = ((global::NhsCui.Toolkit.Web.MedicationListViewMode)(m_privateObject.GetField("mode")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("mode", value);
            }
        }

        internal bool showGraphics
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetField("showGraphics")));
                return ret;
            }
            set
            {
                m_privateObject.SetField("showGraphics", value);
            }
        }

        internal System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication> Medications
        {
            get
            {
                System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication> ret = ((System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication>)(m_privateObject.GetProperty("Medications")));
                return ret;
            }
        }

        internal global::NhsCui.Toolkit.Web.MedicationListViewMode Mode
        {
            get
            {
                global::NhsCui.Toolkit.Web.MedicationListViewMode ret = ((global::NhsCui.Toolkit.Web.MedicationListViewMode)(m_privateObject.GetProperty("Mode")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("Mode", value);
            }
        }

        internal bool ShowGraphics
        {
            get
            {
                bool ret = ((bool)(m_privateObject.GetProperty("ShowGraphics")));
                return ret;
            }
            set
            {
                m_privateObject.SetProperty("ShowGraphics", value);
            }
        }

        internal static global::System.Web.UI.WebControls.WebControl CreatePrivate()
        {
            object[] args = new object[0];
            Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.MedicationListView", new System.Type[0], args);
            return ((global::System.Web.UI.WebControls.WebControl)(priv_obj.Target));
        }

        internal static global::System.Web.UI.WebControls.WebControl CreatePrivate(System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication> medicationList)
        {
            object[] args = new object[] {
                medicationList};
            Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("NhsCui.Toolkit.Web", "NhsCui.Toolkit.Web.MedicationListView", new System.Type[] {
                    typeof(System.Collections.Generic.List<NhsCui.Toolkit.Web.Medication>)}, args);
            return ((global::System.Web.UI.WebControls.WebControl)(priv_obj.Target));
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddAttributesToRender(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("AddAttributesToRender", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void CreateChildControls()
        {
            object[] args = new object[0];
            m_privateObject.Invoke("CreateChildControls", new System.Type[0], args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal void Render(global::System.Web.UI.HtmlTextWriter writer)
        {
            object[] args = new object[] {
                writer};
            m_privateObject.Invoke("Render", new System.Type[] {
                    typeof(global::System.Web.UI.HtmlTextWriter)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        internal void AddMedicationNameLabels(global::System.Web.UI.WebControls.Panel parent)
        {
            object[] args = new object[] {
                parent};
            m_privateObject.Invoke("AddMedicationNameLabels", new System.Type[] {
                    typeof(global::System.Web.UI.WebControls.Panel)}, args);
        }

        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])")]
        [SuppressMessage("Microsoft.Globalization", "CA1304:SpecifyCultureInfo", MessageId = "Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])")]
        internal void AddMedicationNameLabel(global::NhsCui.Toolkit.Web.Medication medication, global::System.Web.UI.WebControls.Panel parent, string cssClass)
        {
            object[] args = new object[] {
                medication,
                parent,
                cssClass};
            m_privateObject.Invoke("AddMedicationNameLabel", new System.Type[] {
                    typeof(global::NhsCui.Toolkit.Web.Medication),
                    typeof(global::System.Web.UI.WebControls.Panel),
                    typeof(string)}, args);
        }
    }
}